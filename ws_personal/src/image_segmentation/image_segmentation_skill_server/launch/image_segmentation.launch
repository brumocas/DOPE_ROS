<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="action_name" default='ImageSegmentationSkill'/>
    <arg name="yaml_neural_network" default='$(find image_segmentation_skill_server)/yaml/neural_network.yaml'/>
    <arg name="yaml_config" default='$(find image_segmentation_skill_server)/yaml/config.yaml'/>
    <arg name="yaml_image_filters" default='$(find image_segmentation_skill_server)/yaml/image_filters.yaml'/>

    <!--Topics-->
    <arg name="image_subscriber" default="/friday/phoxi_camera/image_raw" />
    <arg name="image_publisher" default="/friday/segmented_image" />

    <!-- Mask RCNN configurations -->
    <arg name="model" default="triangle"/>
    <arg name="use_mode" default="rgb"/>
    <arg name="use_svm" default="false"/>
    <arg name="height_sufix" default="" unless="$(eval arg('use_svm'))"/>
    <arg name="height_sufix" default="_svm" if="$(eval arg('use_svm'))"/>
    <arg name="height_estimator" default="height_estimator$(arg height_sufix)"/>
    <arg name="model_sufix" default="_rgbd" if="$(eval arg('use_mode') == 'rgbd')"/>
    <arg name="model_sufix" default="" unless="$(eval arg('use_mode') == 'rgbd')"/>
    <arg name="triangle_weight" default="triangle_simu_0158$(arg model_sufix).h5"/>
    <arg name="tube_weight" default="tube_real_0210$(arg model_sufix).h5"/>


    <arg name="Mask_RCNN_tube_model" default="$(find image_segmentation_skill_server)/models/$(arg tube_weight)" />
    <arg name="Mask_RCNN_triangle_model" default="$(find image_segmentation_skill_server)/models/$(arg triangle_weight)" />

    <!-- PCL configurations -->
    <arg name="use_filters" default="false"/>

<!--     <group ns="image_segmentation_skill"> -->
<!--         <rosparam file="$(find object_detection_deep_learning_skill_server)/configs/perception/config.yaml" /> -->
<!--         <param name="tube" value="$(arg Mask_RCNN_tube_model)"/> -->
<!--         <param name="triangle" value="$(arg Mask_RCNN_triangle_model)"/> -->
<!--     </group> -->


    <group ns="image_segmentation_skill">
        <param name="image_subscriber" type="str" value="$(arg image_subscriber)" />
        <param name="image_publisher" type="str" value="$(arg image_publisher)" />
    </group>


    <node name="object_detection_server" pkg="image_segmentation_skill_server" type="image_segmentation_skill_server_node.py" respawn="true" output="screen" />
        <rosparam command="load" file="$(arg yaml_config)" subst_value="true"/>
        <rosparam command="load" ns="neural_networks" file="$(arg yaml_neural_network)" subst_value="true"/>
        <rosparam command="load" ns="image_processing" file="$(arg yaml_image_filters)" subst_value="true"/>

</launch>
