;; Auto-generated. Do not edit!


(when (boundp 'dope_skill_msgs::DopeSkillResult)
  (if (not (find-package "DOPE_SKILL_MSGS"))
    (make-package "DOPE_SKILL_MSGS"))
  (shadow 'DopeSkillResult (find-package "DOPE_SKILL_MSGS")))
(unless (find-package "DOPE_SKILL_MSGS::DOPESKILLRESULT")
  (make-package "DOPE_SKILL_MSGS::DOPESKILLRESULT"))

(in-package "ROS")
;;//! \htmlinclude DopeSkillResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass dope_skill_msgs::DopeSkillResult
  :super ros::object
  :slots (_percentage _skillStatus _outcome _pose ))

(defmethod dope_skill_msgs::DopeSkillResult
  (:init
   (&key
    ((:percentage __percentage) 0)
    ((:skillStatus __skillStatus) "")
    ((:outcome __outcome) "")
    ((:pose __pose) (instance geometry_msgs::TransformStamped :init))
    )
   (send-super :init)
   (setq _percentage (round __percentage))
   (setq _skillStatus (string __skillStatus))
   (setq _outcome (string __outcome))
   (setq _pose __pose)
   self)
  (:percentage
   (&optional __percentage)
   (if __percentage (setq _percentage __percentage)) _percentage)
  (:skillStatus
   (&optional __skillStatus)
   (if __skillStatus (setq _skillStatus __skillStatus)) _skillStatus)
  (:outcome
   (&optional __outcome)
   (if __outcome (setq _outcome __outcome)) _outcome)
  (:pose
   (&rest __pose)
   (if (keywordp (car __pose))
       (send* _pose __pose)
     (progn
       (if __pose (setq _pose (car __pose)))
       _pose)))
  (:serialization-length
   ()
   (+
    ;; int32 _percentage
    4
    ;; string _skillStatus
    4 (length _skillStatus)
    ;; string _outcome
    4 (length _outcome)
    ;; geometry_msgs/TransformStamped _pose
    (send _pose :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _percentage
       (write-long _percentage s)
     ;; string _skillStatus
       (write-long (length _skillStatus) s) (princ _skillStatus s)
     ;; string _outcome
       (write-long (length _outcome) s) (princ _outcome s)
     ;; geometry_msgs/TransformStamped _pose
       (send _pose :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _percentage
     (setq _percentage (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _skillStatus
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _skillStatus (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _outcome
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _outcome (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; geometry_msgs/TransformStamped _pose
     (send _pose :deserialize buf ptr-) (incf ptr- (send _pose :serialization-length))
   ;;
   self)
  )

(setf (get dope_skill_msgs::DopeSkillResult :md5sum-) "60064ae4a52afa51a106b96d5b760708")
(setf (get dope_skill_msgs::DopeSkillResult :datatype-) "dope_skill_msgs/DopeSkillResult")
(setf (get dope_skill_msgs::DopeSkillResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
int32 percentage
string skillStatus
string outcome
geometry_msgs/TransformStamped pose


================================================================================
MSG: geometry_msgs/TransformStamped
# This expresses a transform from coordinate frame header.frame_id
# to the coordinate frame child_frame_id
#
# This message is mostly used by the 
# <a href=\"http://wiki.ros.org/tf\">tf</a> package. 
# See its documentation for more information.

Header header
string child_frame_id # the frame id of the child frame
Transform transform

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Transform
# This represents the transform between two coordinate frames in free space.

Vector3 translation
Quaternion rotation

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :dope_skill_msgs/DopeSkillResult "60064ae4a52afa51a106b96d5b760708")


